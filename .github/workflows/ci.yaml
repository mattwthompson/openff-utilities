name: CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

defaults:
  run:
    shell: bash -leo pipefail {0} {0}

jobs:
  test:
    name: ${{ matrix.os }}, 🐍=${{ matrix.python-version }}, 🟠=${{ matrix.ambertools }}, 👁️=${{ matrix.openeye }}, 🐉=${{ matrix.mamba-executable }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, macos-12, ubuntu-latest]
        python-version: ["3.12"]
        ambertools: [false]
        openeye: [false]
        mamba-executable: ["micromamba"]

    env:
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt
      COV: --cov=openff/utilities --cov-report=xml --cov-config=setup.cfg --cov-append

    steps:
    - uses: actions/checkout@v4

    - name: Set up conda environment with micromamba
      if: matrix.mamba-executable == 'micromamba'
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: devtools/conda-envs/test_env.yaml
        create-args: >-
          python=${{ matrix.python-version }}

    - name: Set up conda environment with Mamba
      if: matrix.mamba-executable == 'mamba'
      uses: conda-incubator/setup-miniconda@v3
      with:
        environment-file: devtools/conda-envs/test_env.yaml
        python-version: ${{ matrix.python-version }}
        mamba-version: "*"
  
    - name: Install AmberTools
      if: matrix.ambertools == true
      run: |
        ${{ matrix.mamba-executable}} install --yes -c conda-forge ambertools
        python -c "from shutil import which; assert which('sqm') is not None"

    - name: Check AmberTools Missing
      if: matrix.ambertools == false
      run: |
        python -c "from shutil import which; assert which('sqm') is None"

    - name: Install OpenEye Toolkits
      if: matrix.openeye == true
      run: |
        ${{ matrix.mamba-executable}} install --yes -c openeye openeye-toolkits
        python -c "from openeye import oechem"

    - name: Check OpenEye Toolkits missing
      if: matrix.openeye == false
      run: python devtools/scripts/assert_openeye_not_found.py

    - name: Install package
      run: python -m pip install -e .

    - name: Environment Information
      run: ${{ matrix.mamba-executable}} list

    - name: Look at $PATH and $GITHUB_PATH (first time)
      run: echo $PATH && echo $GITHUB_PATH

    - name: Add $MAMBA_EXE to $GITHUB_PATH
      run: |
        export PATH=$PATH:$MAMBA_EXE

    - name: Look at $PATH and $GITHUB_PATH (second time)
      run: echo $PATH && echo $GITHUB_PATH

    - name: Double-check that the executable exists
      run: which micromamba
